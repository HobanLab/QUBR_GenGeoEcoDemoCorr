!is.na(long_end.y) ~ long_end.y)) %>%
dplyr::select(!c(lat_start.y, lat_start.x, long_start.y, long_start.x, lat_end.y, lat_end.x, long_end.y, long_end.x))
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "LM") %>%
write_csv(., "./LM_transect_pts.csv")
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "LC") %>%
write_csv(., "./LC_transect_pts.csv")
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "LC") %>%
write_csv(., "./SD_transect_pts.csv")
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "SD") %>%
write_csv(., "./SD_transect_pts.csv")
getwd()
transect_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/field_work/2023_Sept/data/Field_datasheets_filled_before_KA_check_transects.csv", na.strings = c("NA", ""))
transect_data_processed <- transect_data_raw %>%
rename(lat_start = Transect.start.point..N,
long_start = Transect.start.point..W,
lat_end = Transect.end.point..N,
long_end = Transect.end.point..W) %>%
mutate(long_end = paste0("-", long_end),
long_start = paste0("-", long_start),
transect_num = row_number())
# Fixing lat/long points to be in dec deg for mapping#
fix_deg_dec_min_lat_t_start <- transect_data_processed %>%
filter(grepl(" ", lat_start)) %>%
mutate(lat_start = measurements::conv_unit(lat_start, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(transect_num, lat_start))
fix_deg_dec_min_lat_t_end <- transect_data_processed %>%
filter(grepl(" ", lat_end)) %>%
mutate(lat_end = measurements::conv_unit(lat_end, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(transect_num, lat_end))
fix_deg_dec_min_long_t_start <- transect_data_processed %>%
filter(grepl(" ", long_start)) %>%
mutate(long_start = measurements::conv_unit(long_start, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(transect_num, long_start))
fix_deg_dec_min_long_t_end <- transect_data_processed %>%
filter(grepl(" ", long_end)) %>%
mutate(long_end = measurements::conv_unit(long_end, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(transect_num, long_end))
fixed_transect_data_processed <- transect_data_processed %>%
left_join(fix_deg_dec_min_long_t_start, by=join_by(transect_num)) %>%
left_join(fix_deg_dec_min_lat_t_start, by=join_by(transect_num)) %>%
left_join(fix_deg_dec_min_long_t_end, by=join_by(transect_num)) %>%
left_join(fix_deg_dec_min_lat_t_end, by=join_by(transect_num)) %>%
mutate(lat_start = case_when(is.na(lat_start.y) ~ lat_start.x,
!is.na(lat_start.y) ~ lat_start.y),
long_start = case_when(is.na(long_start.y) ~ long_start.x,
!is.na(long_start.y) ~ long_start.y),
lat_end = case_when(is.na(lat_end.y) ~ lat_end.x,
!is.na(lat_end.y) ~ lat_end.y),
long_end = case_when(is.na(long_end.y) ~ long_end.x,
!is.na(long_end.y) ~ long_end.y)) %>%
dplyr::select(!c(lat_start.y, lat_start.x, long_start.y, long_start.x, lat_end.y, lat_end.x, long_end.y, long_end.x))
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "SD") %>%
write_csv(., "./SD_transect_pts.csv")
fixed_transect_data_processed %>%
dplyr::select(c(lat_start, long_start, lat_end, long_end, Locality, transect_num)) %>%
filter(Locality == "LC") %>%
write_csv(., "./LC_transect_pts.csv")
field_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/field_work/Sept_23/data/Field_datasheets_filled_before_KA_check.csv", na.strings = c("NA", ""))
field_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/field_work/2023_Sept/data/Field_datasheets_filled_before_KA_check.csv", na.strings = c("NA", ""))
mother_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/field_work/2023_Sept/data/Field_datasheets_filled_before_KA_check_mother_trees.csv", na.strings = c("NA", ""))
field_data_processed <- field_data_raw %>%
mutate(Canopy1 = as.numeric(Canopy1),
Canopy2 = as.numeric(Canopy2)) %>%
mutate(across(starts_with("DBH"), ~ (.x/100)^2)) %>% #Squaring all of the DBH's and then summing them and then sqrting the sum is how people in the US tend to use multi-stem dbh's (which is what 167 of my trees are)
mutate(DBH_ag = sqrt(rowSums(across(starts_with("DBH")), na.rm = T))) %>%
mutate(multistemmed = case_when(is.na(DBH2) ~ F,
!is.na(DBH2) ~ T)) %>% # adding a column that is a logical vector that describes if the tree has multiple stems or not
dplyr::select(!c(DBH1, DBH2, DBH3, DBH4, DBH5, DBH6)) %>%
filter(DBH_ag != 0) %>% #remove individuals with no DBH measurements
mutate(Canopy_short = case_when(Canopy1 <= Canopy2 ~ Canopy1,
Canopy2 < Canopy1 ~ Canopy2,),
Canopy_long = case_when(Canopy1 >= Canopy2 ~ Canopy1,
Canopy2 > Canopy1 ~ Canopy2,),
Crown_spread = (Canopy_short + Canopy_long)/2,
a = Canopy_long/2,
b = Canopy_short/2,
c = sqrt(a^2 - b^2),
eccentricity = c/a,
Canopy_area = pi*a*b) %>% #eccentricity is a measure of how circular the canopy is, equations for this found here: https://www.andrews.edu/~rwright/Precalculus-RLW/Text/07-03.html#:~:text=Eccentricity%20is%20a%20measure%20of,ellipse%20is%20almost%20a%20line., crown spread is the avg of our two measures of canopy length
filter(!is.na(Canopy_short) & !is.na(Canopy_long)) %>% #remove individuals with no canopy measurements
mutate(Locality = as.factor(Locality)) %>% # make sure Locality is a factor
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W) #fixing lat long names + data
daniel_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/pt_data/2021Data_populations_metal_labels.csv", na.strings = "") #read in the csv with Daniels pt data
daniel_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/exploring_data/pt_data/2021Data_populations_metal_labels.csv", na.strings = "") #read in the csv with Daniels pt data
daniel_data_processed <- daniel_data_raw %>% mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1 = Cob.1..m.,
Canopy2 = Cob.2..m.,
notes = Observaciones)
View(field_data_raw)
field_data_raw %>%
filter(!is.na(Daniel_tag))
daniel_data_processed <- daniel_data_raw %>% mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1 = Cob.1..m.,
Canopy2 = Cob.2..m.,
notes = Observaciones) %>%
dyplr::select(Daniel_tag, DBH, Canopy1, Canopy2)
library(tidyverse)
library(dplyr)
daniel_data_processed <- daniel_data_raw %>% mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1 = Cob.1..m.,
Canopy2 = Cob.2..m.,
notes = Observaciones) %>%
dplyr::select(Daniel_tag, DBH, Canopy1, Canopy2)
?left_join
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag))
View(field_data_processed)
daniel_data_processed <- daniel_data_raw %>% mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones) %>%
dplyr::select(Daniel_tag, DBH_daniel, Canopy1_daniel, Canopy2_daniel)
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag))
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = case_when(!is.na(Daniel_tag) & is.na(Canopy1) ~ Canopy1_daniel))
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = case_when(
!is.na(Daniel_tag) & is.na(Canopy1) ~ Canopy1_daniel,
is.na(Daniel_tag) ~ Canopy1))
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1))
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1),
Canopy2 = ifelse(!is.na(Daniel_tag) & is.na(Canopy2), Canopy2_daniel, Canopy2),
DBH1 = ifelse(!is.na(Daniel_tag) & is.na(DBH1), DBH_daniel, DBH1))
View(daniel_data_processed)
View(daniel_data_raw)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel)
View(daniel_data_processed)
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1),
Canopy2 = ifelse(!is.na(Daniel_tag) & is.na(Canopy2), Canopy2_daniel, Canopy2),
DBH1 = ifelse(!is.na(Daniel_tag) & is.na(DBH1), DBH1_daniel, DBH1),
DBH3 = ifelse(!is.na(Daniel_tag) & is.na(DBH3), DBH3_daniel, DBH3),
DBH2 = ifelse(!is.na(Daniel_tag) & is.na(DBH2), DBH2_daniel, DBH2),
DBH4 = ifelse(!is.na(Daniel_tag) & is.na(DBH4), DBH4_daniel, DBH4))
View(field_data_processed)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
mutate(across(starts_with("DBH"), ~ (.x/pi))) %>% #converting their DBH measurements to actual diameter measurements rather than just circumference measurements
mutate(across(starts_with("DBH"), ~ (.x*100))) %>%
#converting their DBH measurements to cm
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel)
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1),
Canopy2 = ifelse(!is.na(Daniel_tag) & is.na(Canopy2), Canopy2_daniel, Canopy2),
DBH1 = ifelse(!is.na(Daniel_tag) & is.na(DBH1), DBH1_daniel, DBH1),
DBH3 = ifelse(!is.na(Daniel_tag) & is.na(DBH3), DBH3_daniel, DBH3),
DBH2 = ifelse(!is.na(Daniel_tag) & is.na(DBH2), DBH2_daniel, DBH2),
DBH4 = ifelse(!is.na(Daniel_tag) & is.na(DBH4), DBH4_daniel, DBH4))
View(field_data_processed)
View(daniel_data_processed)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel) %>%
mutate(across(starts_with("DBH"), ~ (.x/pi))) %>% #converting their DBH measurements to actual diameter measurements rather than just circumference measurements
mutate(across(starts_with("DBH"), ~ (.x*100)))
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
mutate(DBH1_daniel = case_match(is.na(DBH1_daniel) ~ DBH_daniel)) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
mutate(DBH1_daniel = case_when(
is.na(DBH1_daniel) ~ DBH_daniel,
!is.na(DBH1_daniel) ~ DBH1_daniel)) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel)
daniel_data_processed <- daniel_data_raw %>%
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W,
DBH_daniel = DAP.Total..m.,
tree_num = Núm.,
Daniel_tag = Num..Metal.label,
region = Region,
locality = Localidad,
altitude = Altitud..msnm.,
fruited_2020 = Con.Bellota..2020.,
collected_2020 = Colecta..2020.,
height = Altura..m.,
DRC = D..Basal..m.,
Canopy1_daniel = Cob.1..m.,
Canopy2_daniel = Cob.2..m.,
notes = Observaciones,
DBH2_daniel = DBH2,
DBH1_daniel = DBH1,
DBH3_daniel = DBH3,
DBH4_daniel = DBH4) %>%
mutate(DBH1_daniel = case_when(
is.na(DBH1_daniel) ~ DBH_daniel,
!is.na(DBH1_daniel) ~ DBH1_daniel)) %>%
dplyr::select(Daniel_tag, DBH1_daniel, DBH2_daniel, DBH3_daniel, DBH4_daniel, Canopy1_daniel, Canopy2_daniel) %>%
mutate(across(starts_with("DBH"), ~ (.x/pi))) %>% #converting their DBH measurements to actual diameter measurements rather than just circumference measurements
mutate(across(starts_with("DBH"), ~ (.x*100)))
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1),
Canopy2 = ifelse(!is.na(Daniel_tag) & is.na(Canopy2), Canopy2_daniel, Canopy2),
DBH1 = ifelse(!is.na(Daniel_tag) & is.na(DBH1), DBH1_daniel, DBH1),
DBH3 = ifelse(!is.na(Daniel_tag) & is.na(DBH3), DBH3_daniel, DBH3),
DBH2 = ifelse(!is.na(Daniel_tag) & is.na(DBH2), DBH2_daniel, DBH2),
DBH4 = ifelse(!is.na(Daniel_tag) & is.na(DBH4), DBH4_daniel, DBH4)) %>%
mutate(Canopy1 = as.numeric(Canopy1),
Canopy2 = as.numeric(Canopy2)) %>%
mutate(across(starts_with("DBH"), ~ (.x/100)^2)) %>% #Squaring all of the DBH's and then summing them and then sqrting the sum is how people in the US tend to use multi-stem dbh's (which is what 167 of my trees are)
mutate(DBH_ag = sqrt(rowSums(across(starts_with("DBH")), na.rm = T))) %>%
mutate(multistemmed = case_when(is.na(DBH2) ~ F,
!is.na(DBH2) ~ T)) %>% # adding a column that is a logical vector that describes if the tree has multiple stems or not
dplyr::select(!c(DBH1, DBH2, DBH3, DBH4, DBH5, DBH6)) %>%
filter(DBH_ag != 0) %>% #remove individuals with no DBH measurements
mutate(Canopy_short = case_when(Canopy1 <= Canopy2 ~ Canopy1,
Canopy2 < Canopy1 ~ Canopy2,),
Canopy_long = case_when(Canopy1 >= Canopy2 ~ Canopy1,
Canopy2 > Canopy1 ~ Canopy2,),
Crown_spread = (Canopy_short + Canopy_long)/2,
a = Canopy_long/2,
b = Canopy_short/2,
c = sqrt(a^2 - b^2),
eccentricity = c/a,
Canopy_area = pi*a*b) %>% #eccentricity is a measure of how circular the canopy is, equations for this found here: https://www.andrews.edu/~rwright/Precalculus-RLW/Text/07-03.html#:~:text=Eccentricity%20is%20a%20measure%20of,ellipse%20is%20almost%20a%20line., crown spread is the avg of our two measures of canopy length
filter(!is.na(Canopy_short) & !is.na(Canopy_long)) %>% #remove individuals with no canopy measurements
mutate(Locality = as.factor(Locality)) %>% # make sure Locality is a factor
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W) #fixing lat long names + data
View(field_data_processed)
field_data_processed <- field_data_raw %>%
left_join(., daniel_data_processed, by = join_by(Daniel_tag)) %>%
mutate(Canopy1 = ifelse(!is.na(Daniel_tag) & is.na(Canopy1), Canopy1_daniel, Canopy1),
Canopy2 = ifelse(!is.na(Daniel_tag) & is.na(Canopy2), Canopy2_daniel, Canopy2),
DBH1 = ifelse(!is.na(Daniel_tag) & is.na(DBH1), DBH1_daniel, DBH1),
DBH3 = ifelse(!is.na(Daniel_tag) & is.na(DBH3), DBH3_daniel, DBH3),
DBH2 = ifelse(!is.na(Daniel_tag) & is.na(DBH2), DBH2_daniel, DBH2),
DBH4 = ifelse(!is.na(Daniel_tag) & is.na(DBH4), DBH4_daniel, DBH4)) %>%
dplyr::select(!c(Canopy1_daniel, Canopy2_daniel, DBH1_daniel, DBH3_daniel, DBH2_daniel, DBH4_daniel)) %>%
mutate(Canopy1 = as.numeric(Canopy1),
Canopy2 = as.numeric(Canopy2)) %>%
mutate(across(starts_with("DBH"), ~ (.x/100)^2)) %>% #Squaring all of the DBH's and then summing them and then sqrting the sum is how people in the US tend to use multi-stem dbh's (which is what 167 of my trees are)
mutate(DBH_ag = sqrt(rowSums(across(starts_with("DBH")), na.rm = T))) %>%
mutate(multistemmed = case_when(is.na(DBH2) ~ F,
!is.na(DBH2) ~ T)) %>% # adding a column that is a logical vector that describes if the tree has multiple stems or not
dplyr::select(!c(DBH1, DBH2, DBH3, DBH4, DBH5, DBH6)) %>%
filter(DBH_ag != 0) %>% #remove individuals with no DBH measurements
mutate(Canopy_short = case_when(Canopy1 <= Canopy2 ~ Canopy1,
Canopy2 < Canopy1 ~ Canopy2,),
Canopy_long = case_when(Canopy1 >= Canopy2 ~ Canopy1,
Canopy2 > Canopy1 ~ Canopy2,),
Crown_spread = (Canopy_short + Canopy_long)/2,
a = Canopy_long/2,
b = Canopy_short/2,
c = sqrt(a^2 - b^2),
eccentricity = c/a,
Canopy_area = pi*a*b) %>% #eccentricity is a measure of how circular the canopy is, equations for this found here: https://www.andrews.edu/~rwright/Precalculus-RLW/Text/07-03.html#:~:text=Eccentricity%20is%20a%20measure%20of,ellipse%20is%20almost%20a%20line., crown spread is the avg of our two measures of canopy length
filter(!is.na(Canopy_short) & !is.na(Canopy_long)) %>% #remove individuals with no canopy measurements
mutate(Locality = as.factor(Locality)) %>% # make sure Locality is a factor
mutate(W = paste0("-", W)) %>%
rename(lat = N,
long = W) #fixing lat long names + data
View(field_data_processed)
# Fixing lat/long points to be in dec deg for mapping#
fix_deg_dec_min_lat <- field_data_processed %>%
filter(grepl(" ", lat)) %>%
mutate(lat = measurements::conv_unit(lat, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(QUBR_ID, lat))
fix_deg_dec_min_long <- field_data_processed %>%
filter(grepl(" ", long)) %>%
mutate(long = measurements::conv_unit(long, from = 'deg_dec_min', to = 'dec_deg')) %>%
dplyr::select(c(QUBR_ID, long))
fixed_field_data_processed <- field_data_processed %>%
left_join(fix_deg_dec_min_long, by=join_by(QUBR_ID)) %>%
left_join(fix_deg_dec_min_lat, by=join_by(QUBR_ID)) %>%
mutate(lat = case_when(is.na(lat.y) ~ lat.x,
!is.na(lat.y) ~ lat.y),
long = case_when(is.na(long.y) ~ long.x,
!is.na(long.y) ~ long.y)) %>%
mutate(lat = as.numeric(lat),
long = as.numeric(long)) %>%
dplyr::select(!c(lat.y, lat.x, long.y, long.x))
View(fixed_field_data_processed)
mother_data_raw <- read.csv("/Users/Ashley/Desktop/Hoban/Quercus_brandegeei/field_work/2023_Sept/data/Field_datasheets_filled_before_KA_check_mother_trees.csv", na.strings = c("NA", ""))
mother_data_processed <- mother_data_raw %>%
rename(Metal_ID = Blue.metal.ID..) %>%
mutate(Mother_tree = "Y") %>%
dplyr::select(c(Metal_ID, Mother_tree)) %>%
unique()
fixed_field_data_processed %>%
left_join(mother_data_processed, by = join_by("Metal_ID")) %>%
mutate(Mother_tree = case_when(Mother_tree == "Y" ~ "Y",
is.na(Mother_tree ) ~ "N")) %>%
filter(Locality == "LM") %>%
filter(Mother_tree == "N") %>%
dplyr::select(c(lat, long, QUBR_ID)) %>%
write_csv(., "./LM_not_moms.csv")
fixed_field_data_processed %>%
left_join(mother_data_processed, by = join_by("Metal_ID")) %>%
mutate(Mother_tree = case_when(Mother_tree == "Y" ~ "Y",
is.na(Mother_tree ) ~ "N")) %>%
filter(Locality == "LC") %>%
filter(Mother_tree == "N") %>%
dplyr::select(c(lat, long, QUBR_ID)) %>%
write_csv(., "./LC_not_moms.csv")
fixed_field_data_processed %>%
left_join(mother_data_processed, by = join_by("Metal_ID")) %>%
mutate(Mother_tree = case_when(Mother_tree == "Y" ~ "Y",
is.na(Mother_tree ) ~ "N")) %>%
filter(Locality == "SD") %>%
filter(Mother_tree == "N") %>%
dplyr::select(c(lat, long, QUBR_ID)) %>%
write_csv(., "./SD_not_moms.csv")
View(mother_data_processed)
fixed_field_data_processed %>%
left_join(mother_data_processed, by = join_by("Metal_ID")) %>%
mutate(Mother_tree = case_when(Mother_tree == "Y" ~ "Y",
is.na(Mother_tree ) ~ "N")) %>%
filter(Locality == "SD") %>%
filter(Mother_tree == "Y") %>%
dplyr::select(c(lat, long, QUBR_ID)) %>%
write_csv(., "./SD_moms.csv")
fixed_field_data_processed %>%
left_join(mother_data_processed, by = join_by("Metal_ID")) %>%
mutate(Mother_tree = case_when(Mother_tree == "Y" ~ "Y",
is.na(Mother_tree ) ~ "N")) %>%
filter(Locality == "LC") %>%
filter(Mother_tree == "Y") %>%
dplyr::select(c(lat, long, QUBR_ID)) %>%
write_csv(., "./LC_moms.csv")
