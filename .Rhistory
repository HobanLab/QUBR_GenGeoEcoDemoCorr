(all_points_aspect_raster_15_data_pts >= 157.5 & all_points_aspect_raster_15_data_pts < 202.5) ~ "S", #south is between 157.5 and 202.5
(all_points_aspect_raster_15_data_pts >= 202.5 & all_points_aspect_raster_15_data_pts < 247.5) ~ "SW", #southwest is between 202.5 and 246.5
(all_points_aspect_raster_15_data_pts >= 247.5 & all_points_aspect_raster_15_data_pts < 292.5) ~ "W", #west is between 247.5 and 292.5 degrees
(all_points_aspect_raster_15_data_pts >= 292.5 & all_points_aspect_raster_15_data_pts < 337.5) ~ "NW")) #northwest is between 292.5 and 337.5 degrees
# the directions are a range of 90 degrees
all_points_fixed_field_data_processed_terrain <- all_points_fixed_field_data_processed_terrain %>%
mutate(all_points_aspect_raster_15_data_pts_4_categorical = case_when((all_points_aspect_raster_15_data_pts >= 0 & all_points_aspect_raster_15_data_pts < 45) ~ "N",  #north is between 315 and 22.5
(all_points_aspect_raster_15_data_pts >= 315 & all_points_aspect_raster_15_data_pts < 359.99999) ~ "N",
(all_points_aspect_raster_15_data_pts >= 22.5 & all_points_aspect_raster_15_data_pts < 135) ~ "E", #northeast is between 22.5 and 135  degrees
(all_points_aspect_raster_15_data_pts >= 135 & all_points_aspect_raster_15_data_pts < 225) ~ "S", #south is between 135 and 225 degrees
(all_points_aspect_raster_15_data_pts >= 225 & all_points_aspect_raster_15_data_pts < 315) ~ "W")) #west is between 225 and 315
# the directions are a range of 45 degrees
LM_fixed_field_data_processed_terrain <- LM_fixed_field_data_processed_terrain %>%
mutate(LM_aspect_raster_15_data_pts_8_categorical = case_when((LM_aspect_raster_15_data_pts > 0 & LM_aspect_raster_15_data_pts < 22.5) ~ "N",  #north is between 337.5 and 22.5
(LM_aspect_raster_15_data_pts >= 337.5 & LM_aspect_raster_15_data_pts < 359.99999) ~ "N",
(LM_aspect_raster_15_data_pts >= 22.5 & LM_aspect_raster_15_data_pts < 67.5) ~ "NE", #northeast is between 22.5 and 67.5 degrees
(LM_aspect_raster_15_data_pts >= 67.5 & LM_aspect_raster_15_data_pts < 112.5) ~ "E", #east is between 67.5 and 112.5 degrees
(LM_aspect_raster_15_data_pts >= 112.5 & LM_aspect_raster_15_data_pts < 157.5) ~ "SE", #southeast is between 122.5 and 157.5
(LM_aspect_raster_15_data_pts >= 157.5 & LM_aspect_raster_15_data_pts < 202.5) ~ "S", #south is between 157.5 and 202.5
(LM_aspect_raster_15_data_pts >= 202.5 & LM_aspect_raster_15_data_pts < 247.5) ~ "SW", #southwest is between 202.5 and 246.5
(LM_aspect_raster_15_data_pts >= 247.5 & LM_aspect_raster_15_data_pts < 292.5) ~ "W", #west is between 247.5 and 292.5 degrees
(LM_aspect_raster_15_data_pts >= 292.5 & LM_aspect_raster_15_data_pts < 337.5) ~ "NW")) #northwest is between 292.5 and 337.5 degrees
# the directions are a range of 90 degrees
LM_fixed_field_data_processed_terrain <- LM_fixed_field_data_processed_terrain %>%
mutate(LM_aspect_raster_15_data_pts_4_categorical = case_when((LM_aspect_raster_15_data_pts >= 0 & LM_aspect_raster_15_data_pts < 45) ~ "N",  #north is between 315 and 22.5
(LM_aspect_raster_15_data_pts >= 315 & LM_aspect_raster_15_data_pts < 359.99999) ~ "N",
(LM_aspect_raster_15_data_pts >= 22.5 & LM_aspect_raster_15_data_pts < 135) ~ "E", #northeast is between 22.5 and 135  degrees
(LM_aspect_raster_15_data_pts >= 135 & LM_aspect_raster_15_data_pts < 225) ~ "S", #south is between 135 and 225 degrees
(LM_aspect_raster_15_data_pts >= 225 & LM_aspect_raster_15_data_pts < 315) ~ "W")) #west is between 225 and 315
# the directions are a range of 45 degrees
LC_fixed_field_data_processed_terrain <- LC_fixed_field_data_processed_terrain %>%
mutate(LC_aspect_raster_15_data_pts_8_categorical = case_when((LC_aspect_raster_15_data_pts > 0 & LC_aspect_raster_15_data_pts < 22.5) ~ "N",  #north is between 337.5 and 22.5
(LC_aspect_raster_15_data_pts >= 337.5 & LC_aspect_raster_15_data_pts < 359.99999) ~ "N",
(LC_aspect_raster_15_data_pts >= 22.5 & LC_aspect_raster_15_data_pts < 67.5) ~ "NE", #northeast is between 22.5 and 67.5 degrees
(LC_aspect_raster_15_data_pts >= 67.5 & LC_aspect_raster_15_data_pts < 112.5) ~ "E", #east is between 67.5 and 112.5 degrees
(LC_aspect_raster_15_data_pts >= 112.5 & LC_aspect_raster_15_data_pts < 157.5) ~ "SE", #southeast is between 122.5 and 157.5
(LC_aspect_raster_15_data_pts >= 157.5 & LC_aspect_raster_15_data_pts < 202.5) ~ "S", #south is between 157.5 and 202.5
(LC_aspect_raster_15_data_pts >= 202.5 & LC_aspect_raster_15_data_pts < 247.5) ~ "SW", #southwest is between 202.5 and 246.5
(LC_aspect_raster_15_data_pts >= 247.5 & LC_aspect_raster_15_data_pts < 292.5) ~ "W", #west is between 247.5 and 292.5 degrees
(LC_aspect_raster_15_data_pts >= 292.5 & LC_aspect_raster_15_data_pts < 337.5) ~ "NW")) #northwest is between 292.5 and 337.5 degrees
# the directions are a range of 90 degrees
LC_fixed_field_data_processed_terrain <- LC_fixed_field_data_processed_terrain %>%
mutate(LC_aspect_raster_15_data_pts_4_categorical = case_when((LC_aspect_raster_15_data_pts >= 0 & LC_aspect_raster_15_data_pts < 45) ~ "N",  #north is between 315 and 22.5
(LC_aspect_raster_15_data_pts >= 315 & LC_aspect_raster_15_data_pts < 359.99999) ~ "N",
(LC_aspect_raster_15_data_pts >= 45 & LC_aspect_raster_15_data_pts < 135) ~ "E", #northeast is between 22.5 and 135  degrees
(LC_aspect_raster_15_data_pts >= 135 & LC_aspect_raster_15_data_pts < 225) ~ "S", #south is between 135 and 225 degrees
(LC_aspect_raster_15_data_pts >= 225 & LC_aspect_raster_15_data_pts < 315) ~ "W")) #west is between 225 and 315
# the directions are a range of 45 degrees
SD_fixed_field_data_processed_terrain <- SD_fixed_field_data_processed_terrain %>%
mutate(SD_aspect_raster_15_data_pts_8_categorical = case_when((SD_aspect_raster_15_data_pts > 0 & SD_aspect_raster_15_data_pts < 22.5) ~ "N",  #north is between 337.5 and 22.5
(SD_aspect_raster_15_data_pts >= 337.5 & SD_aspect_raster_15_data_pts < 359.99999) ~ "N",
(SD_aspect_raster_15_data_pts >= 22.5 & SD_aspect_raster_15_data_pts < 67.5) ~ "NE", #northeast is between 22.5 and 67.5 degrees
(SD_aspect_raster_15_data_pts >= 67.5 & SD_aspect_raster_15_data_pts < 112.5) ~ "E", #east is between 67.5 and 112.5 degrees
(SD_aspect_raster_15_data_pts >= 112.5 & SD_aspect_raster_15_data_pts < 157.5) ~ "SE", #southeast is between 122.5 and 157.5
(SD_aspect_raster_15_data_pts >= 157.5 & SD_aspect_raster_15_data_pts < 202.5) ~ "S", #south is between 157.5 and 202.5
(SD_aspect_raster_15_data_pts >= 202.5 & SD_aspect_raster_15_data_pts < 247.5) ~ "SW", #southwest is between 202.5 and 246.5
(SD_aspect_raster_15_data_pts >= 247.5 & SD_aspect_raster_15_data_pts < 292.5) ~ "W", #west is between 247.5 and 292.5 degrees
(SD_aspect_raster_15_data_pts >= 292.5 & SD_aspect_raster_15_data_pts < 337.5) ~ "NW")) #northwest is between 292.5 and 337.5 degrees
# the directions are a range of 90 degrees
SD_fixed_field_data_processed_terrain <- SD_fixed_field_data_processed_terrain %>%
mutate(SD_aspect_raster_15_data_pts_4_categorical = case_when((SD_aspect_raster_15_data_pts >= 0 & SD_aspect_raster_15_data_pts < 45) ~ "N",  #north is between 315 and 22.5
(SD_aspect_raster_15_data_pts >= 315 & SD_aspect_raster_15_data_pts < 359.99999) ~ "N",
(SD_aspect_raster_15_data_pts >= 45 & SD_aspect_raster_15_data_pts < 135) ~ "E", #northeast is between 22.5 and 135  degrees
(SD_aspect_raster_15_data_pts >= 135 & SD_aspect_raster_15_data_pts < 225) ~ "S", #south is between 135 and 225 degrees
(SD_aspect_raster_15_data_pts >= 225 & SD_aspect_raster_15_data_pts < 315) ~ "W")) #west is between 225 and 315
#histograms
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = Canopy_short))+
xlab("Short Canopy Axis")+
ylab("Frequency")
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = Canopy_long))+
xlab("Long Canopy Axis")+
ylab("Frequency")
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = Crown_spread))+
xlab("Canopy Spread")+
ylab("Frequency")
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = Canopy_area))+
xlab("Canopy Area")+
ylab("Frequency")
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = DBH_ag))+
xlab("Aggregated DBH")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_short))+
xlab("Short Canopy Axis")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_long))+
xlab("Long Canopy Axis")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Crown_spread))+
xlab("Canopy Spread")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_area))+
xlab("Canopy Area")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = DBH_ag))+
xlab("Aggregated DBH")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_short))+
xlab("Short Canopy Axis")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_long))+
xlab("Long Canopy Axis")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Crown_spread))+
xlab("Canopy Spread")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_area))+
xlab("Canopy Area")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = DBH_ag))+
xlab("Aggregated DBH")+
ylab("Frequency")
#SD
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_short))+
xlab("Short Canopy Axis")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_long))+
xlab("Long Canopy Axis")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Crown_spread))+
xlab("Canopy Spread")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Canopy_area))+
xlab("Canopy Area")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = DBH_ag))+
xlab("Aggregated DBH")+
ylab("Frequency")
ggplot(fixed_field_data_processed_sf_trans_coordinates) + # Generate the base plot
geom_histogram(aes(x = Elevation..m.))+
xlab("Elevation")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Elevation..m.FIXED))+
xlab("Elevation (m)")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Elevation..m.))+
xlab("Elevation (m)")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed) + # Generate the base plot
geom_histogram(aes(x = Elevation..m.))+
xlab("Elevation (m)")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed_terrain) + # Generate the base plot
geom_histogram(aes(x = LM_slope_raster_15_data_pts))+
xlab("Slope (degrees)")+
ylab("Frequency")
ggplot(LC_fixed_field_data_processed_terrain) + # Generate the base plot
geom_histogram(aes(x = LC_slope_raster_15_data_pts))+
xlab("Slope (degrees)")+
ylab("Frequency")
ggplot(SD_fixed_field_data_processed_terrain) + # Generate the base plot
geom_histogram(aes(x = SD_slope_raster_15_data_pts))+
xlab("Slope (degrees)")+
ylab("Frequency")
ggplot(LM_fixed_field_data_processed_terrain) + #generate the base plot
geom_bar(aes(x = LM_aspect_raster_15_data_pts_8_categorical))+
xlab("Direction")+
ylab("Frequency")
#Cook's D
plot(all_points_multiple_lm_SCA)
#removing outliers based on which points were deemed influential
all_points_fixed_field_data_processed_terrain_no_NA_No_outliers <- all_points_fixed_field_data_processed_terrain_no_NA[-c(15, 24,26,27),]
#multiple linear regression base model with all variables, and using the no NA dataset to be able to use the backwards regression
all_points_multiple_lm_SCA <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
#checking to see which variables might be the most useful
avPlots(all_points_multiple_lm_SCA) #added variable plots, looking to see which variables might be most useful in exlaining the size/shape variables
#removing outliers based on which points were deemed influential
all_points_fixed_field_data_processed_terrain_no_NA_No_outliers <- all_points_fixed_field_data_processed_terrain_no_NA[-c(15, 24,26,27),]
#had to remove points 174 and 175 because they had NAs in the slope data and there was a NA in elevation we needed to remove to continue the analysis
all_points_fixed_field_data_processed_terrain_no_NA <- all_points_fixed_field_data_processed_terrain %>%
filter(is.na(all_points_slope_raster_15_data_pts) == F) %>%
filter(is.na(Elevation..m.FIXED) == F) %>%
filter(is.na(all_points_aspect_raster_15_data_pts_8_categorical) == F)
View(all_points_fixed_field_data_processed_terrain_no_NA)
#removing outliers based on which points were deemed influential
all_points_fixed_field_data_processed_terrain_no_NA_No_outliers <- all_points_fixed_field_data_processed_terrain_no_NA[-c(15, 24,26,27),]
#multiple linear regression base model with all variables, and using the no NA dataset to be able to use the backwards regression
all_points_multiple_lm_SCA <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
#checking to see which variables might be the most useful
avPlots(all_points_multiple_lm_SCA) #added variable plots, looking to see which variables might be most useful in exlaining the size/shape variables
#storing the summary of the model
all_points_multiple_lm_SCA_summary <- summary(all_points_multiple_lm_SCA)
#checking for any multicollinarity, all of them have great than 1/(1-r^2)  VIF values, meaning there is multicollinarity
all_points_multiple_lm_SCA_vif <- car::vif(all_points_multiple_lm_SCA) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
all_points_multiple_lm_SCA_VIF_multi_num <- (1 / (1-all_points_multiple_lm_SCA_summary$r.squared))
all_points_multiple_lm_SCA_vif > all_points_multiple_lm_SCA_VIF_multi_num
#determinging our main effects model with two methods: backward's regression and the dredge function
step(all_points_multiple_lm_SCA) #using backwards regression, where last model produced is the best fit
options(na.action = "na.fail") #have to set na.action to na.fail to be able to run dredge
dredge(all_points_multiple_lm_SCA) #generates the best model and the rank of best models
#the best simplified multiple linear regression model chosen
all_points_multiple_lm_SCA_simplified <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA)
summary(all_points_multiple_lm_SCA_simplified) #best model, but still only 5% of variability explained
#nested F test comparing the simplified model to the original, If model 1 is really correct, what is the chance that you would randomly obtain data that fits model 2 so much better?
anova(all_points_multiple_lm_SCA_simplified, all_points_multiple_lm_SCA) #results are not signfiicant, meaning there is no compelling evidence to support the larger model and we should stick with the smaller one
#determing interactions with recursive binary partioning and regression tree
all_points_potential_interactions_SCA <- rpart(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts +
all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
par(xpd = TRUE) # allows text to "eXPanD" (spill over outside the plotting area)
plot(all_points_potential_interactions_SCA) # show the tree structure
text(all_points_potential_interactions_SCA, pretty = 0) # add text labels
#interactions model, based on results of regression tree
all_points_multiple_lm_SCA_interacts <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts +
all_points_aspect_raster_15_data_pts_8_categorical + Elevation..m.FIXED:all_points_slope_raster_15_data_pts +
I(all_points_slope_raster_15_data_pts^2) + all_points_slope_raster_15_data_pts:all_points_aspect_raster_15_data_pts_8_categorical +
Elevation..m.FIXED:all_points_aspect_raster_15_data_pts_8_categorical + I(Elevation..m.FIXED^2),
data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
summary(all_points_multiple_lm_SCA_interacts)
#slimming down the variables in the interaction model
step(all_points_multiple_lm_SCA_interacts) #using backwards regression, where last model produced is the best fit
dredge <- dredge(all_points_multiple_lm_SCA_interacts) #using the dredge model to narro the models down to the best choice
dredge[1,] #extracting the best model
#including interactions, the best simplified multiple linear regression model chosen
all_points_multiple_lm_SCA_interacts_simplified_step <- lm(Canopy_short ~  Elevation..m.FIXED + all_points_slope_raster_15_data_pts +
all_points_aspect_raster_15_data_pts_8_categorical + I(all_points_slope_raster_15_data_pts^2) +
I(Elevation..m.FIXED^2) + all_points_slope_raster_15_data_pts:all_points_aspect_raster_15_data_pts_8_categorical,  data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
all_points_multiple_lm_SCA_interacts_simplified_dredge <- lm(Canopy_short ~  all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical +
I(all_points_slope_raster_15_data_pts^2) + Elevation..m.FIXED + I(Elevation..m.FIXED^2) +
all_points_slope_raster_15_data_pts:all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
#nested F test to compare simplified dredge and step models
anova(all_points_multiple_lm_SCA_interacts_simplified_step, all_points_multiple_lm_SCA_interacts_simplified_dredge) #results are not signficant, meaning there is no compelling evidence to support the larger model and we should stick with the smaller one
summary(all_points_multiple_lm_SCA_interacts_simplified_dredge) #best model, but still only 5% of variability explained
#nested F test to compare simplified interactions model to full interactions model
anova(all_points_multiple_lm_SCA_interacts_simplified_dredge, all_points_multiple_lm_SCA_interacts) #results are not signficant, meaning there is no compelling evidence to support the larger model and we should stick with the smaller one
#nested F test to compare simplified interactions model to simplified model without interactions
anova(all_points_multiple_lm_SCA_interacts_simplified_dredge, all_points_multiple_lm_SCA_simplified) #results are signficant, meaning there is compelling evidence to support the smaller model than the larger one
#checking linearity with elevation
ggplot(data = all_points_multiple_lm_SCA_simplified, (aes(x=Elevation..m.FIXED, y=Canopy_short)))+
geom_smooth(method='lm')+
geom_point()+
xlab("Elevation (m)")+
ylab("Short Canopy Axis")
#checking linearity with slope
ggplot(data = all_points_multiple_lm_SCA_simplified, (aes(x=all_points_slope_raster_15_data_pts, y=Canopy_short)))+
geom_smooth(method='lm')+
geom_point()+
xlab("Slope (degrees)")+
ylab("Short Canopy Axis")
#checking linearity by category
all_points_fixed_field_data_processed_terrain_no_NA_No_outliers$Elevation..m.FIXED
#elevation
ggplot(data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers, (aes(x=Elevation..m.FIXED, y=Canopy_short)))+
geom_smooth(method='lm')+
geom_point()+
xlab("Elevation (m)")+
ylab("Short Canopy Axis")+
facet_wrap(~ all_points_aspect_raster_15_data_pts_8_categorical)
#slope
ggplot(data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers, (aes(x=all_points_slope_raster_15_data_pts, y=Canopy_short)))+
geom_smooth(method='lm')+
geom_point()+
xlab("Slope (degrees)")+
ylab("Short Canopy Axis")+
facet_wrap(~ all_points_aspect_raster_15_data_pts_8_categorical)
#checking normality of residuals with a histogram and qqnorm plot
ggplot(all_points_multiple_lm_SCA_simplified, aes(x= all_points_multiple_lm_SCA_simplified$residuals))+
geom_histogram()+
labs(title = "Distribution of Residuals for Short Canopy Axis vs. Elevation + Slope + Aspect")+
xlab("Residuals")+
ylab("Frequency")
#qqnorm plot
ggplot(all_points_multiple_lm_SCA_simplified, aes(sample = all_points_multiple_lm_SCA_simplified$residuals))+
geom_qq()
shapiro.test(all_points_multiple_lm_SCA_simplified$residuals) #shapiro wilk test for normality, if significant, then the residuals are not likely normally distributed
#shapiro-wilk test is significant, so we will use a model where canopy area is transformed
all_points_multiple_lm_SCA_simplified_lg <- lm(Canopy_short_lg ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA)
all_points_multiple_lm_SCA_simplified_sqrt <- lm(Canopy_area_sqrt ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA)
shapiro.test(all_points_multiple_lm_SCA_simplified_lg$residuals) #shapiro welk test for normality, if significant, then the residuals are not likely normally distributed
#checking equal variance
ggplot(data = all_points_multiple_lm_SCA_simplified_lg, aes(x = all_points_multiple_lm_SCA_simplified_lg$fitted.values, y = all_points_multiple_lm_SCA_simplified_lg$residuals))+
geom_point()+
geom_abline(intercept = 0, slope = 0)+
xlab("Fitted Values")+
ylab("Residuals")+
labs(title = "Residuals vs. Fitted Values for log(SCA) and Elevation + Slope + Aspect")
#extracting model characteristics and significant
all_points_multiple_lm_SCA_summary <- summary(all_points_multiple_lm_SCA) #sig
all_points_multiple_lm_SCA_simplified_summary <- summary(all_points_multiple_lm_SCA_simplified) #sig
all_points_multiple_lm_SCA_simplified_lg_summary <- summary(all_points_multiple_lm_SCA_simplified_lg) #sig
#additive model
library(mgcv)
all_points_add.gam_SCA <- gam(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA)
all_points_add.gam_SCA_interact <- gam(Canopy_short ~ Elevation..m.FIXED * all_points_slope_raster_15_data_pts * all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA)
#checking overall fit and potential issues
gam.check(all_points_add.gam_SCA)
gam.check(all_points_add.gam_SCA_interact)
#comparing the model's GCV value
summary(all_points_add.gam_SCA)
summary(all_points_add.gam_SCA_interact)
#slimming down the variables in the interaction model
dredge <- dredge(all_points_add.gam_SCA) #using the dredge model to narro the models down to the best choice
dredge[1,] #extracting the best model
#checking for any multicollinarity, all of them have great than 1/(1-r^2)  VIF values, meaning there is multicollinarity
all_points_multiple_lm_SCA_vif <- car::vif(all_points_multiple_lm_SCA) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
all_points_multiple_lm_SCA_VIF_multi_num <- (1 / (1-all_points_multiple_lm_SCA_summary$r.squared))
all_points_multiple_lm_SCA_vif > all_points_multiple_lm_SCA_VIF_multi_num
all_points_multiple_lm_SCA_vif
cor(all_points_fixed_field_data_processed_terrain_no_NA_No_outliers[, c(Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical)])
cor(all_points_fixed_field_data_processed_terrain_no_NA_No_outliers[, c(Elevation..m.FIXED, all_points_slope_raster_15_data_pts, all_points_aspect_raster_15_data_pts_8_categorical)])
cor(all_points_fixed_field_data_processed_terrain_no_NA_No_outliers[, c(all_points_fixed_field_data_processed_terrain_no_NA_No_outliers$Elevation..m.FIXED, all_points_fixed_field_data_processed_terrain_no_NA_No_outliers$all_points_slope_raster_15_data_pts, all_points_fixed_field_data_processed_terrain_no_NA_No_outliers$all_points_aspect_raster_15_data_pts_8_categorical)])
cor
#checking VIF with reduced models
vif_check_no_aspect <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
vif_check_no_slope <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
vif_check_no_elevation <-lm(Canopy_short ~  all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
vif(lm_check_no_aspect)
car::vif(lm_check_no_aspect)
#checking VIF with reduced models
lm_check_no_aspect <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
car::vif(lm_check_no_aspect)
car::vif(all_points_multiple_lm_SCA)
#checking for any multicollinarity, all of them have great than 1/(1-r^2)  VIF values, meaning there is multicollinarity
all_points_multiple_lm_SCA_vif <- car::vif(all_points_multiple_lm_SCA) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
all_points_multiple_lm_SCA_VIF_multi_num <- (1 / (1-all_points_multiple_lm_SCA_summary$r.squared))
all_points_multiple_lm_SCA_vif > all_points_multiple_lm_SCA_VIF_multi_num
all_points_multiple_lm_SCA_VIF_multi_num
car::vif(all_points_multiple_lm_SCA)
all_points_multiple_lm_SCA_VIF_multi_num
lm_check_no_aspect_summary <- summary(lm_check_no_aspect)
#checking VIF with reduced models
#aspect
lm_check_no_aspect <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
lm_check_no_aspect_summary <- summary(lm_check_no_aspect)
lm_check_no_aspect_vif <- car::vif(lm_check_no_aspect) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
lm_check_no_aspect_VIF_multi_num <- (1 / (1-lm_check_no_aspect_summary$r.squared))
#checking VIF with reduced models
#aspect
lm_check_no_aspect <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
lm_check_no_aspect_summary <- summary(lm_check_no_aspect)
lm_check_no_aspect_vif <- car::vif(lm_check_no_aspect) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
lm_check_no_aspect_VIF_multi_num <- (1 / (1-lm_check_no_aspect_summary$r.squared))
lm_check_no_aspect > lm_check_no_aspect_VIF_multi_num
lm_check_no_aspect > lm_check_no_aspect_VIF_multi_num
lm_check_no_aspect_VIF_multi_num
lm_check_no_aspect
all_points_multiple_lm_SCA_vif
all_points_multiple_lm_SCA_VIF_multi_num
lm_check_no_aspect
lm_check_no_aspect_vif > lm_check_no_aspect_VIF_multi_num
#slope
lm_check_no_slope <- lm(Canopy_short ~ Elevation..m.FIXED + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
lm_check_no_slope_summary <- summary(lm_check_no_slope)
lm_check_no_slope_vif <- car::vif(lm_check_no_slope) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
lm_check_no_slope_VIF_multi_num <- (1 / (1-lm_check_no_slope_summary$r.squared))
lm_check_no_slope_vif > lm_check_no_slope_VIF_multi_num
lm_check_no_slope_vif > lm_check_no_slope_VIF_multi_num
#aspect
lm_check_no_elevation <-lm(Canopy_short ~  all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
lm_check_no_elevation_summary <- summary(lm_check_no_elevation)
lm_check_no_slope_vif <- car::vif(lm_check_no_elevation) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
#aspect
lm_check_no_elevation <-lm(Canopy_short ~  all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical, data = all_points_fixed_field_data_processed_terrain_no_NA_No_outliers)
lm_check_no_elevation_summary <- summary(lm_check_no_elevation)
lm_check_no_elevation_vif <- car::vif(lm_check_no_elevation) #variance inflation factor, looking for if values is greater than 5 or 10, or if  If the VIF is larger than 1/(1-R2), where R2 is the Multiple R-squared of the regression, then that predictor is more related to the other predictors than it is to the response.
lm_check_no_elevation_VIF_multi_num <- (1 / (1-lm_check_no_elevation_summary$r.squared))
lm_check_no_elevation_vif > lm_check_no_elevation_VIF_multi_num
all_points_add.gam_SCA <- gam(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA)
all_points_add.gam_SCA_interact <- gam(Canopy_short ~ Elevation..m.FIXED * all_points_slope_raster_15_data_pts * all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA)
#checking overall fit and potential issues
gam.check(all_points_add.gam_SCA)
gam.check(all_points_add.gam_SCA_interact)
#comparing the model's GCV value
summary(all_points_add.gam_SCA)
summary(all_points_add.gam_SCA_interact)
#checking overall fit and potential issues
gam.check(all_points_add.gam_SCA)
gam.check(all_points_add.gam_SCA_interact)
summary(all_points_add.gsm_SCA) #summarize the model
# generalized smooth model (using all knots)
all_points_add.gsm_SCA <- gsm(Canopy_short ~ Elevation..m.FIXED + all_points_slope_raster_15_data_pts + all_points_aspect_raster_15_data_pts_8_categorical,
data = all_points_fixed_field_data_processed_terrain_no_NA, knots = nrow(all_points_fixed_field_data_processed_terrain_no_NA))
summary(all_points_add.gsm_SCA) #summarize the model
#comparing the model's GCV value
summary(all_points_add.gam_SCA)
summary(all_points_add.gam_SCA_interact)
library(tidyverse)
library(moments) # for calculating the moments of each variable
library(sf) # for plotting spatial objects
library(smatr)
library(ggpmisc)
library(PMCMRplus) # for Dunn test
library(geomtextpath) # for PCA graphing
library(spatstat) # to run the nndist function
library(raster)
library(rstatix) #to run the Games-Howell Test
fixed_field_data_processed <- read.csv("./analyses/fixed_field_data_processed.csv") #imports the csv created from analyzing_morpho_data_cleaned.R
#transforming the data into shapefiles with either WGS84
fixed_field_data_processed_sf <- st_as_sf(fixed_field_data_processed,
coords = c("long", "lat"), crs = 4326)
#transforming the shapefile of trees from WGS84 into equal area projection UTM 12N
fixed_field_data_processed_sf_transformed <- st_transform(fixed_field_data_processed_sf, crs = 26912) # this in UTM 12 N an equal area projection
#create dataframe with X and Y UTM coordinates
fixed_field_data_processed_sf_trans_coords <- st_coordinates(fixed_field_data_processed_sf_transformed) #creates a dataframe with seperate x and y columns from the UTM 12N transformation
fixed_field_data_processed_sf_trans_coordinates <- fixed_field_data_processed_sf_transformed %>%
cbind(fixed_field_data_processed_sf_trans_coords) #combines the x and y coordinate data frame with the transformed sf dataframe
#add average nearest neighbor for each individual column
fixed_field_data_processed_NN_UTM <- fixed_field_data_processed_sf_trans_coordinates %>%  #creates a dataframe with the ANN of the closest 5 individual trees for each individual
mutate(dist1 = nndist(X = X.1, Y= Y, k = 1))%>% #creates column for the distances of each tree to their 1st nearest neighbor
mutate(dist2 = nndist(X = X.1, Y= Y, k = 2)) %>% #creates column for the distances of each tree to their 2nd nearest neighbor
mutate(dist3 = nndist(X = X.1, Y= Y, k = 3)) %>% #creates column for the distances of each tree to their 3rd nearest neighbor
mutate(dist4 = nndist(X = X.1, Y= Y, k = 4)) %>% #creates column for the distances of each tree to their 4th nearest neighbor
mutate(dist5 = nndist(X = X.1, Y= Y, k = 5)) %>% #creates column for the distances of each tree to their 5th nearest neighbor
rowwise()%>% #so that in the next part we take the averages across rows
mutate(ANN = mean(c(dist1, dist2, dist3, dist4, dist5)))  %>% #creates a column of the average distances (1-5) of each individual
dplyr::select(!c(dist1, dist2, dist3, dist4, dist5)) #removes the excess columns with the 5 nearest neighbor distances
LM_fixed_field_data_processed_sf <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "LM") %>%
st_as_sfc()
LC_fixed_field_data_processed_sf <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "LC") %>%
st_as_sfc()
SD_fixed_field_data_processed_sf <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "SD") %>%
st_as_sfc()
LM_fixed_field_data_processed <- fixed_field_data_processed_sf_trans_coordinates %>%
filter(Locality == "LM")
LC_fixed_field_data_processed <- fixed_field_data_processed_sf_trans_coordinates %>%
filter(Locality == "LC")
SD_fixed_field_data_processed <- fixed_field_data_processed_sf_trans_coordinates %>%
filter(Locality == "SD")
#upload ArcGIS river shapefile and filter out polygons for each population
river_LM <- st_read("./data/Shapefiles/FINAL River Shapefiles ArcGIS/LM River/LM_Rivers_Final.shp")
river_LM  <- river_LM$geometry[1]
plot(river_LM)
river_LC  <- st_read("./data/Shapefiles/FINAL River Shapefiles ArcGIS/LC River/LC_Rivers_Final.shp")
river_LC  <- river_LC$geometry[1]
plot(river_LC)
river_SD <- st_read("./data/Shapefiles/FINAL River Shapefiles ArcGIS/SD River/SD_Rivers_Final.shp")
river_SD <- river_SD$geometry[1]
plot(river_SD)
#changing the coordinate reference system of the river polygons to be equal area projection (UTM 12N), uses meters as distance measurement
river_LM_trans <- st_as_sf(st_transform(river_LM, crs = 26912))
river_LC_trans <- st_as_sf(st_transform(river_LC, crs = 26912))
river_SD_trans <- st_as_sf(st_transform(river_SD, crs = 26912))
#creating a boundry box of LM with the UTM 12 N min and max lat lon values and then turning it into a simple feature geometry
LM_fixed_field_data_processed_box <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "LM") %>%
st_bbox %>%
st_as_sfc()
#creating a boundry box of LC with the UTM 12 N min and max lat lon values and then turning it into a simple feature geometry
LC_fixed_field_data_processed_box <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "LC") %>%
st_bbox %>%
st_as_sfc()
#creating a boundry box of SD with the UTM 12 N min and max lat lon values and then turning it into a simple feature geometry
SD_fixed_field_data_processed_box <- fixed_field_data_processed_sf_transformed %>%
filter(Locality == "SD") %>%
st_bbox %>%
st_as_sfc()
#creating bboxs for all of the river shapefiles for each population
LM_box <- st_bbox(river_LM_trans)
LC_box <- st_bbox(river_LC_trans)
SD_box <- st_bbox(river_SD_trans)
#loading in soil textures from CONABIO, theses are too larger, about 1 km^2 I believe
clay_05 <- raster(paste0("./data/Soil Grid/clay content/clay content 0-5.tif"))
clay_200 <- raster(paste0("./data/Soil Grid/clay content/clay content 100-200.tif"))
silt_05 <- raster(paste0("./data/Soil Grid/silt/silt 0-5.tif"))
silt_200 <-raster(paste0("./data/Soil Grid/silt/silt 100-200.tif"))
sand_05 <- raster(paste0("./data/Soil Grid/sand/sand 0-5.tif"))
sand_200 <- raster(paste0("./data/Soil Grid/sand/sand 100-200.tif"))
ph_05 <- raster(paste0("./data/Soil Grid/pH/ph_0-5.tif")) #0-5 cm ph
ph_200 <- raster(paste0("./data/Soil Grid/pH/ph_100-200.tif")) #100-200 ph
ocd_05 <- raster(paste0("./data/Soil Grid/organic carbon density/OCD_0-5.tif")) #0-5cm organic carbon density
ocd_200 <- raster(paste0("./data/Soil Grid/organic carbon density/OCR_100-200.tif")) #100-200cm organic carbon density
coarse_frag_05 <- raster(paste0("./data/Soil Grid/coarse fragments/coarse_fragments_0-5.tif")) #0-5 cm coarse fragments
coarse_frag_200 <- raster(paste0("./data/Soil Grid/coarse fragments/coarse_fragments_100-200.tif")) #100-200 cm coarse fragments
cat_ex_cap_05 <-raster(paste0("./data/Soil Grid/cation exchange capacity/Cat_exc_0-5.tif")) #0-5 cm cation exchange capacity
cat_ex_cap_200 <- raster(paste0("./data/Soil Grid/cation exchange capacity/Cat_exc_100-200.tif")) #100-200 cm cation exchange capacity
bulk_dens_05 <- raster(paste0("./data/Soil Grid/bulk density/bulk_density_0-5.tif")) #0-5 cm bulk density
bulk_dens_200 <- raster(paste0("./data/Soil Grid/bulk density/bulk_density_100-200.tif")) #100-200 cm bulk density
vol_wat_10kpa_05 <- raster(paste0("./data/Soil Grid/vol. water content at -10 kPa/vol_water_-10_0-5.tif"))  #0-5 cm -10 kpa volumn water content
vol_wat_10kpa_200 <- raster(paste0("./data/Soil Grid/vol. water content at -10 kPa/vol_water_-10_100-200.tif"))  #100-200 cm -10 kpa volumn water content
vol_wat_33kpa_05 <- raster(paste0("./data/Soil Grid/vol. water content at -33 kPa /vol_water_0-5.tif")) #0-5 cm -33 kpa volumn water content
vol_wat_33kpa_200 <- raster(paste0("./data/Soil Grid/vol. water content at -33 kPa /vol_water_100-200.tif")) #100-200 cm -33 kpa volumn water content
vol_wat_1500kpa_05 <- raster(paste0("./data/Soil Grid/vol. water content at -1500 kPa/vol_water_-1500kPa_0-5.tif"))  #0-5 cm -1500 kpa volumn water content
vol_wat_1500kpa_200 <- raster(paste0("./data/Soil Grid/vol. water content at -1500 kPa/vol_water_-1500_100-200.tif")) #100-200 cm -1500 kpa volumn water content
nitrogen_05 <- raster(paste0("./data/Soil Grid/Nitrogen/nitrogen 0-5.tif"))
nitrogen_200 <- raster(paste0("./data/Soil Grid/Nitrogen/nitrogen 100-200.tif"))
Soil_Organic_Carbon_05 <- raster(paste0("./data/Soil Grid/Soil Organic Carbon/SOC 0-5.tif"))
Soil_Organic_Carbon_200 <- raster(paste0("./data/Soil Grid/Soil Organic Carbon/SOC 100-200.tif"))
#project rasters to equal area projection (UTM 12N), uses meters as distance measurement
clay_05_utm <- projectRaster(clay_05, crs=26912) #converting the 0-5 cm clay raster to utm 12
clay_200_utm <- projectRaster(clay_200, crs=26912) #converting the 90-200 cm clay raster to utm 12
silt_05_utm <- projectRaster(silt_05, crs=26912)
silt_200_utm <- projectRaster(silt_200, crs=26912)
sand_05_utm <- projectRaster(sand_05, crs=26912)
